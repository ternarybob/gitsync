# GitSync Configuration Example
#
# This file demonstrates the GitSync configuration structure.
# GitSync synchronizes git repositories with branch filtering and bidirectional support.
#
# Environment variables: Use ${VAR} or ${VAR:-default} syntax
# Cron expressions use robfig/cron with seconds support
#
# Schedule format: "SEC MIN HOUR DAY MONTH WEEKDAY"
# Examples:
#   "*/30 * * * * *" - Every 30 seconds
#   "0 */5 * * * *"  - Every 5 minutes
#   "0 0 */2 * * *"  - Every 2 hours
#   "0 0 0 * * *"    - Daily at midnight
#   "@hourly"        - Every hour
#   "@daily"         - Every day at midnight

# Service configuration
[service]
name = "gitsync"
environment = "development"  # development, staging, production

# Jobs configuration - shared settings for all jobs
[jobs]
names = ["main-sync", "feature-sync", "bidirectional-up"]  # List of job names to run
schedule = "0 */5 * * * *"  # Every 5 minutes (with seconds field)
timeout = "5m"               # Timeout for all jobs

# Individual job: Sync main branch safely
["main-sync"]
description = "Sync main branch to multiple targets"
enabled = true
source = "https://github.com/myorg/project.git"
targets = [
  "https://gitlab.com/myorg/project.git",
  "https://bitbucket.org/myorg/project.git"
]
branches = ["main"]          # Only sync main branch
override = false             # Safe push (no force) for main branch
git_username = "sync-bot"
git_token = "${GITHUB_TOKEN}"  # From environment variable

# Individual job: Sync feature branches with wildcards
["feature-sync"]
description = "Sync feature branches with wildcard patterns"
enabled = true
source = "https://github.com/myorg/features.git"
targets = ["https://backup.myorg.com/features.git"]
branches = ["feature-*", "*-sync", "hotfix/*"]  # Wildcard patterns
override = true              # Force push allowed for feature branches
git_username = "backup-user"
git_token = "${BACKUP_TOKEN}"

# Individual job: Bidirectional sync (upstream)
["bidirectional-up"]
description = "Sync from backup back to primary (bidirectional)"
enabled = false              # Disabled by default
source = "https://backup.myorg.com/features.git"
targets = ["https://github.com/myorg/features.git"]
branches = ["*-sync"]        # Only sync-tagged branches back
override = true              # Force push for sync branches
git_username = "sync-bot"
git_token = "${GITHUB_TOKEN}"

# SSH authentication example (alternative to token)
["ssh-example"]
description = "Example using SSH key authentication"
enabled = false
source = "git@github.com:myorg/private-repo.git"
targets = ["git@gitlab.com:myorg/private-repo.git"]
branches = ["main", "develop"]
override = false
ssh_key_path = "/home/user/.ssh/id_rsa"
# OR use environment variable for SSH key path:
# ssh_key_env = "SSH_KEY_PATH"

# Author replacement example (for private->primary repo workflows)
["author-replacement"]
description = "Replace commit authors during sync (private->primary)"
enabled = false
source = "https://github.com/contractor/private-repo.git"
targets = ["https://github.com/company/primary-repo.git"]
branches = ["*-sync"]        # Only sync tagged branches
override = true              # Required for rewritten history
rewrite_history = true       # Enable author replacement

# Author replacement rules
[[author-replacement.author_replace]]
from_email = "contractor@external.com"
from_name = "External Contractor"
to_email = "employee@company.com"
to_name = "Company Employee"

git_username = "company-sync"
git_token = "${GITHUB_TOKEN}"

# Logging configuration
[logging]
level = "info"               # debug, info, warn, error
format = "text"              # text, json
output = "both"              # stdout, both (console + file)
max_file_size = 100          # Log file max size in MB
max_backups = 3              # Number of backup log files
max_age = 7                  # Days to retain log files